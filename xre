#!/bin/bash
# "Prefix" script for use with Xilinx ISE tools under Ubuntu Linux.
# 
# Although Xilinx supplies Linux versions of their tools, they don't
# fully work under Ubuntu. This is a big oversight, in my opinion.
# Specifially, I've found that ISIM doesn't work properly out of the
# box (probably other tools don't either).
#
# This script sources the Xilinx 'settings' file to get basic
# environment variables set, and then plays some games with LD_PRELOAD
# and LD_LIBRARY_PATH to make sure that the Ubuntu-supplied libstdc++
# is used instead of the Xilinx one.
#
# Basically, this script is designed to be used as a "prefix" for all
# Xilinx commands. So if one wanted to run "ise --fun myTimes.v",
# the command one would actually enter is "xre ise --fun myTimes.v".
#
# The variables below should be tailored to your own machine.
#
# This script is covered under the GPL version 2.0. It was
# originally written by Nicholas Clark.
#
#----------- Variables to Change -------------#

XILINX="/opt/Xilinx/14.5/ISE_DS"

#64-Bit Settings

LIB_PATH="/usr/lib/x86_64-linux-gnu"
LIBSTDC="libstdc++.so.6"
SETTINGS="settings64.sh"
PRELOAD_NAME="LD_PRELOAD"
RUNTIME_PREFIX="linux64"

#32-Bit Settings

#LIB_PATH="/usr/lib/i386-linux-gnu"
#LIBSTDC="libstdc++.so.6"
#SETTINGS="settings32.sh"
#PRELOAD_NAME="LD_PRELOAD_32"
#RUNTIME_PREFIX="linux32"

#--------------- Main script -----------------#

NAME=`basename $0`

# First, the empty case is checked.

if [ "$#" -eq 0 ]; then
    echo
    echo "Error: $NAME: no command specified.">&2
    echo
    echo "Usage: $NAME <xilinx command> <argument(s) to xilinx command>"
    echo "    or $NAME <xilinx command> <shell name>"
    echo
    exit 2
fi

# Next, Help cases are checked.

if [ "$1" == "--help" ] || [ "$1" == "-h" ]; then
    echo
    echo "Usage: $NAME <xilinx command> <argument(s) to xilinx command>"
    echo "    or $NAME <xilinx command> <shell name>"
    echo
    exit 0
fi

# Next, The Xilinx-provided settings file is sourced. These
# generally reside in the installation's root directory.

source "$XILINX/$SETTINGS" "$XILINX" 1>/dev/null

# Next, the field seperator is changed (to help with spaces)

IFS=$(echo -en "\n\b")

# Next, the command argument is copied and removed from the argument stack.
# It is also tested for path validity.

COMMAND="$1"
shift

which "$COMMAND" 1>/dev/null
if [ "$?" -ne 0 ]; then
    echo
    echo "Error: $NAME can't find command '$COMMAND' in any path." >&2
    echo
    exit 1
fi

# If everything went fine, we're ready to run the command.

eval export "$PRELOAD_NAME"="$LIB_PATH/$LIBSTDC"
export LD_LIBRARY_PATH="$LIB_PATH:$LD_LIBRARY_PATH"
eval "$RUNTIME_PREFIX" "$COMMAND" "$@"
RET_VAL=$?

#The command's return value is passed upwards upon completion.

unset IFS
exit $RET_VAL
